name: Compile

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Build firmware
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Cache poetry
      uses: actions/cache@v2
      with:
        path: ~/.cache
        key: ${{ runner.os }}-poetry-v1-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
    - name: Cache .esphome
      uses: actions/cache@v2
      with:
        path: .esphome
        key: ${{ runner.os }}-esphome-v1-${{ hashFiles('**/*.yaml') }}
        restore-keys: |
          ${{ runner.os }}-esphome-
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-platformio-v1-${{ hashFiles('**/*.yaml') }}
        restore-keys: |
          ${{ runner.os }}-platformio-
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install poetry
        poetry install
    - name: Set secrets.yaml
      run: |
          echo "$SECRETS_FILE" > src/secrets.yaml
      shell: bash
      env:
        SECRETS_FILE : ${{secrets.SECRETS_FILE}}
    - name: Compile
      run: |
        poetry run esphome compile sms2slack.yaml
    - name: Upload build
      uses: actions/upload-artifact@v2
      with:
        name: firmware.bin
        path: .esphome/build/sms2slack/.pioenvs/sms2slack/firmware-factory.bin
